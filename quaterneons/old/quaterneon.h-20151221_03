/*
 * quaterneon.h
 *
 * 2015/12/21
 * Waheed Brown
 *
 * OpenGL Tutorial - Quaterneons
 * http://www.cprogramming.com/tutorial/3d/quaternions.html
 */

class Point {
 public:
  static void dotProduct(double* result, double* p, double m[][4]);
  static void showPoint(double* p);
  static double radToDeg(const double rad);
  static double degToRad(const double deg);
};

class Matrix {
 public:
  // Pass by reference
  static void dotProduct(double result[][4], double A[][4], double B[][4]);
  static void showMatrix(double matrix[][4]);
};

class Quaterneon {
 private:
  double _w /* angle in degrees */ , _x, _y, _z;

 public:
  Quaterneon() {}
  Quaterneon(const double newW, const double newX,
	     const double newY, const double newZ) :
    _w(newW), _x(newX), _y(newY), _z(newZ) {}
  const double getW() const { return _w; }
  const double getX() const { return _x; }
  const double getY() const { return _y; }
  const double getZ() const { return _z; }
  Quaterneon operator*(const Quaterneon &o);
  static double calcMagnitude(const double w, const double x,
			      const double y, const double z);
  void normalize();
  void show() const;
};
